% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/write_nwka.R
\name{write_nwka_nexus}
\alias{write_nwka_nexus}
\title{Write Tree File in NEXUS format}
\usage{
write_nwka_nexus(trees, file, translate = TRUE, translate_quotes = TRUE)
}
\arguments{
\item{trees}{An object of class \code{"phylo"} or \code{"multiPhylo"}.}

\item{file}{A file name.}

\item{translate}{If this is \code{TRUE} (the default), the produced nexus tree will contain, in addition to the \code{Trees} block,
a \code{Taxa} block containing the taxon labels, as well as a \code{Translate} instruction in the \code{Trees} block.
Otherwise, it will only contain a \code{Trees} block without a \code{Translate} instruction.}

\item{translate_quotes}{If this is \code{TRUE} (the default), the entries in the \code{Taxa} block and in the \code{Translate} instruction
will be placed within single quotes. Otherwise, they will be written without single quotes.}
}
\description{
This function writes one or more trees to a NEXUS format file. Within the NEXUS file, the trees are stored in the Newick-with-Attributes (NWKA) format.
}
\details{
Only the tip labels are included in the \code{Taxa} block and the \code{Translate} instruction (if applicable).

         The trees inside the NEXUS file will be stored in NWKA format, including all of the available attributes. This is compatible
         with the NEXUS specification, because attributes that cannot be represented in standard Newick format are enclosed within
         square brackets (\code{[]});

         The tip names can be specified either as a \code{Name} element in the tree's \code{tip.attributes}
         element, or as the \code{tip.label} element of the tree. If both are specified, the values stored in
         the \code{Name} attribute take precedence (this allows backward compatibility for trees created
         using \code{\link[ape]{ape}}).

         The node names and support values can similarly be specified either with a \code{Name} or \code{Support}
         element in the tree's \code{node.attributes}, or as the tree's \code{node.label}. If all the node labels
         can be parsed as numbers, they will be assumed to contain support values; otherwise, they will be
         assumed to contain node names. If the \code{node.attributes} already contain a \code{Name} or \code{Support}
         element, the node labels will be ignored.
}
\references{
\url{https://github.com/arklumpus/TreeNode/blob/master/NWKA.md}
}
\seealso{
\code{\link[ape]{ape}}, \code{\link[ape]{write.nexus}}

Other functions to write trees: 
\code{\link{keep_writing_binary_trees}()},
\code{\link{write_binary_trees}()},
\code{\link{write_nwka_tree}()}
}
\author{
Giorgio Bianchini
}
\concept{functions to write trees}
